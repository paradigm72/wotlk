{"version":3,"file":"sim-96692b03.chunk.js","sources":["../../../ui/rogue/presets.ts","../../../ui/rogue/inputs.ts","../../../ui/rogue/sim.ts"],"sourcesContent":["import {Conjured, Consumes, EquipmentSpec, Flask, Food, Glyphs, Potions} from '../core/proto/common.js';\nimport {Player} from '../core/player.js';\nimport {SavedTalents} from '../core/proto/ui.js';\n\nimport {\n\tRogue_Options as RogueOptions,\n\tRogue_Options_PoisonImbue as Poison,\n\tRogue_Rotation as RogueRotation,\n\tRogue_Rotation_AssassinationPriority,\n\tRogue_Rotation_CombatBuilder,\n\tRogue_Rotation_CombatPriority,\n\tRogue_Rotation_Frequency,\n\tRogue_Rotation_SubtletyPriority,\n\tRogueMajorGlyph,\n} from '../core/proto/rogue.js';\n\nimport * as Tooltips from '../core/constants/tooltips.js';\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const CombatTalents = {\n\tname: 'Combat',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '00532000514-0252051050035010223100501251',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfKillingSpree,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfRupture,\n\t\t})\n\t}),\n};\n\nexport const AssassinationTalents = {\n\tname: 'Assassination',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005303104352100520103331051-005005003-502',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfHungerForBlood,\n\t\t})\n\t}),\n};\n\nexport const SubtletyTalents = {\n\tname: 'Subtlety',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '30522300014--5020032030321121350115031151',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfBackstab,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfEviscerate,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfShadowDance,\n\t\t})\n\t}),\n}\n\nexport const HemoSubtletyTalents = {\n\tname: 'Hemo Sub',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '30532010135--502003203032112135011503113',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfEviscerate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfRupture,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfSliceAndDice,\n\t\t})\n\t}),\n}\n\nexport const DefaultRotation = RogueRotation.create({\n\texposeArmorFrequency: Rogue_Rotation_Frequency.Maintain,\n\tminimumComboPointsExposeArmor: 2,\n\ttricksOfTheTradeFrequency: Rogue_Rotation_Frequency.Maintain,\n\tassassinationFinisherPriority: Rogue_Rotation_AssassinationPriority.EnvenomRupture,\n\tcombatBuilder: Rogue_Rotation_CombatBuilder.SinisterStrike,\n\tcombatFinisherPriority: Rogue_Rotation_CombatPriority.RuptureEviscerate,\n\tsubtletyFinisherPriority: Rogue_Rotation_SubtletyPriority.SubtletyEviscerate,\n\tminimumComboPointsPrimaryFinisher: 4,\n\tminimumComboPointsSecondaryFinisher: 4,\n\themoWithDagger: false,\n});\n\nexport const DefaultOptions = RogueOptions.create({\n\tmhImbue: Poison.DeadlyPoison,\n\tohImbue: Poison.InstantPoison,\n\tapplyPoisonsManually: false,\n\tstartingOverkillDuration: 20,\n\thonorOfThievesCritRate: 400,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tprepopPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredRogueThistleTea,\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodMegaMammothMeal,\n});\n\nexport const P2_PRESET_ASSASSINATION = {\n\tname: 'P2 Assassination',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 46125,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t  41398,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45517,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45245,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45461,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t  40053\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45473,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t  40053,\n\t\t\t  42702,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45611,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t  40053,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46124,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t  40003,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46095,\n\t\t\t\"enchant\": 3599,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45536,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45564,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45608,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45456,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45609\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46038\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45484,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t  40003\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45484,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t  40003\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45570,\n\t\t\t\"enchant\": 3608\n\t\t  }\n\t]}`),\n};\n\nexport const P2_PRESET_COMBAT = {\n\tname: 'P2 Combat',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 46125,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t  41398,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45517,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46127,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45461,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t  40053\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45473,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t  40053,\n\t\t\t  42702,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45611,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t  40044,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46043,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  40053,\n\t\t\t  0\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46095,\n\t\t\t\"enchant\": 3599,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45536,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45564,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t  39999,\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45608,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 46048,\n\t\t\t\"gems\": [\n\t\t\t  39999\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45609\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45931\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45132,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t  40053\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45484,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t  40003\n\t\t\t]\n\t\t  },\n\t\t  {\n\t\t\t\"id\": 45296,\n\t\t\t\"gems\": [\n\t\t\t  40053\n\t\t\t]\n\t\t  }\n\t]}`),\n};\n\nexport const PRERAID_PRESET_ASSASSINATION = {\n\tname: 'Pre-Raid Assassination',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42550,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t40058\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40678\n\t\t},\n\t\t{\n\t\t\t\"id\": 43481,\n\t\t\t\"enchant\": 3808\n\t\t},\n\t\t{\n\t\t\t\"id\": 38614,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 39558,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 34448,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39560,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40058,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40694,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37644,\n\t\t\t\"enchant\": 3823\n\t\t},\n\t\t{\n\t\t\t\"id\": 34575,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40586\n\t\t},\n\t\t{\n\t\t\t\"id\": 37642\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 37856,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 37667,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 43612\n\t\t}\n  ]}`),\n};\n\nexport const PRERAID_PRESET_COMBAT = {\n\tname: 'Pre-Raid Combat',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 42550,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40678\n\t\t},\n\t\t{\n\t\t\t\"id\": 37139,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 34241,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39558,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39999,\n\t\t\t\t40014\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 34448,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t39999,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39560,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40014,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40694,\n\t\t\t\"gems\": [\n\t\t\t\t42702,\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 37644,\n\t\t\t\"enchant\": 3823\n\t\t},\n\t\t{\n\t\t\t\"id\": 34575,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40586\n\t\t},\n\t\t{\n\t\t\t\"id\": 37642\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 37693,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 37856,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 44504,\n\t\t\t\"gems\": [\n\t\t\t\t40053\n\t\t\t]\n\t\t}\n  ]}`),\n}\n\nexport const P1_PRESET_ASSASSINATION = {\n\tname: 'P1 Assassination',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 40499,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44664,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40502,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40539,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39765,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40496,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t40053,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40260,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40500,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39701,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 39714,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40386,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40385\n\t\t}\n  ]}`),\n}\n\nexport const P1_PRESET_HEMO_SUB = {\n\tname: \"P1 Hemo Sub\",\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 40499,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44664,\n\t\t\t\"gems\": [\n\t\t\t\t40029\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40502,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40539,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40186,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40541,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40205,\n\t\t\t\"gems\": [\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44011,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t40003,\n\t\t\t\t40034\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39701,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40256\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 40383,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 39714,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40385\n\t\t}\n  ]}`),\n}\n\nexport const P1_PRESET_COMBAT = {\n\tname: 'P1 Combat',\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\n\t\t{\n\t\t\t\"id\": 40499,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42702\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44664,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40502,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40403,\n\t\t\t\"enchant\": 3605\n\t\t},\n\t\t{\n\t\t\t\"id\": 40539,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39765,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t39999,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40541,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 40205,\n\t\t\t\"gems\": [\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 44011,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t39999,\n\t\t\t\t39999\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 39701,\n\t\t\t\"enchant\": 3606\n\t\t},\n\t\t{\n\t\t\t\"id\": 40074\n\t\t},\n\t\t{\n\t\t\t\"id\": 40474\n\t\t},\n\t\t{\n\t\t\t\"id\": 40684\n\t\t},\n\t\t{\n\t\t\t\"id\": 44253\n\t\t},\n\t\t{\n\t\t\t\"id\": 40383,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 39714,\n\t\t\t\"enchant\": 3789\n\t\t},\n\t\t{\n\t\t\t\"id\": 40385\n\t\t}\n  ]}`),\n}\n\nexport const P2_PRESET_HEMO_SUB = {\n\tname: \"P2 Hemo Sub\",\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\n\t\t{\n\t\t\t\"id\": 46125,\n\t\t\t\"enchant\": 3817,\n\t\t\t\"gems\": [\n\t\t\t\t41398,\n\t\t\t\t42143\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45517,\n\t\t\t\"gems\": [\n\t\t\t\t49110\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45245,\n\t\t\t\"enchant\": 3808,\n\t\t\t\"gems\": [\n\t\t\t\t40023,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45461,\n\t\t\t\"enchant\": 3605,\n\t\t\t\"gems\": [\n\t\t\t\t40044\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45473,\n\t\t\t\"enchant\": 3832,\n\t\t\t\"gems\": [\n\t\t\t\t40044,\n\t\t\t\t40023,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45611,\n\t\t\t\"enchant\": 3845,\n\t\t\t\"gems\": [\n\t\t\t\t40044,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46124,\n\t\t\t\"enchant\": 3604,\n\t\t\t\"gems\": [\n\t\t\t\t39997,\n\t\t\t\t0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46095,\n\t\t\t\"enchant\": 3599,\n\t\t\t\"gems\": [\n\t\t\t\t42143,\n\t\t\t\t42143,\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45536,\n\t\t\t\"enchant\": 3823,\n\t\t\t\"gems\": [\n\t\t\t\t40044,\n\t\t\t\t39997,\n\t\t\t\t40023\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45564,\n\t\t\t\"enchant\": 3606,\n\t\t\t\"gems\": [\n\t\t\t\t40023,\n\t\t\t\t40003\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45608,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 46048,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45609\n\t\t},\n\t\t{\n\t\t\t\"id\": 45931\n\t\t},\n\t\t{\n\t\t\t\"id\": 45132,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t\t40044\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45484,\n\t\t\t\"enchant\": 3789,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": 45296,\n\t\t\t\"gems\": [\n\t\t\t\t39997\n\t\t\t]\n\t\t}\n  ]}`),\n}\n","import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nimport {\n\tRogue_Rotation_AssassinationPriority as AssassinationPriority,\n\tRogue_Rotation_CombatPriority as CombatPriority,\n\tRogue_Rotation_CombatBuilder as CombatBuilder,\n\tRogue_Rotation_SubtletyPriority as SubtletyPriority,\n\tRogue_Rotation_Frequency as Frequency,\n\tRogue_Options_PoisonImbue as Poison,\n} from '../core/proto/rogue.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const MainHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\n\tfieldName: 'mhImbue',\n\tnumColumns: 1,\n\tvalues: [\n\t\t{ value: Poison.NoPoison, tooltip: 'No Main Hand Poison' },\n\t\t{ actionId: ActionId.fromItemId(43233), value: Poison.DeadlyPoison },\n\t\t{ actionId: ActionId.fromItemId(43231), value: Poison.InstantPoison },\n\t\t{ actionId: ActionId.fromItemId(43235), value: Poison.WoundPoison },\n\t],\n});\n\nexport const OffHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\n\tfieldName: 'ohImbue',\n\tnumColumns: 1,\n\tvalues: [\n\t\t{ value: Poison.NoPoison, tooltip: 'No Off Hand Poison' },\n\t\t{ actionId: ActionId.fromItemId(43233), value: Poison.DeadlyPoison },\n\t\t{ actionId: ActionId.fromItemId(43231), value: Poison.InstantPoison },\n\t\t{ actionId: ActionId.fromItemId(43235), value: Poison.WoundPoison },\n\t],\n});\n\nexport const StartingOverkillDuration = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\n\tfieldName: 'startingOverkillDuration',\n\tlabel: 'Starting Overkill duration',\n\tlabelTooltip: 'Initial Overkill buff duration at the start of each iteration.',\n});\n\nexport const HonorOfThievesCritRate = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\n\tfieldName: 'honorOfThievesCritRate',\n\tlabel: 'Honor of Thieves Crit Rate',\n\tlabelTooltip: 'Number of crits other group members generate within 100 seconds',\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\n});\n\nexport const ApplyPoisonsManually = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecRogue>({\n\tfieldName: 'applyPoisonsManually',\n\tlabel: 'Configure poisons manually',\n\tlabelTooltip: 'Prevent automatic poison configuration that is based on equipped weapons.',\n});\n\nexport const RogueRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\n\t\t\tfieldName: 'exposeArmorFrequency',\n\t\t\tlabel: 'Expose Armor',\n\t\t\tlabelTooltip: 'Frequency of Expose Armor casts.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\n\t\t\t\t{ name: 'Cast Once', value: Frequency.Once },\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'minimumComboPointsExposeArmor',\n\t\t\tlabel: 'Minimum CP (Expose Armor)',\n\t\t\tlabelTooltip: 'Minimum number of combo points for Expose Armor when only cast once.',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().exposeArmorFrequency == Frequency.Once,\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\n\t\t\tfieldName: 'tricksOfTheTradeFrequency',\n\t\t\tlabel: 'Tricks of the Trade',\n\t\t\tlabelTooltip: 'Frequency of Tricks of the Trade usage.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, CombatBuilder>({\n\t\t\tfieldName: 'combatBuilder',\n\t\t\tlabel: \"Builder\",\n\t\t\tlabelTooltip: 'Use Sinister Strike or Backstab as builder.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"Sinister Strike\", value: CombatBuilder.SinisterStrike },\n\t\t\t\t{ name: \"Backstab\", value: CombatBuilder.Backstab },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().combatPotency > 0\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, CombatPriority>({\n\t\t\tfieldName: 'combatFinisherPriority',\n\t\t\tlabel: 'Finisher Priority',\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Rupture', value: CombatPriority.RuptureEviscerate },\n\t\t\t\t{ name: 'Eviscerate', value: CombatPriority.EviscerateRupture },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().combatPotency > 0\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, AssassinationPriority>({\n\t\t\tfieldName: 'assassinationFinisherPriority',\n\t\t\tlabel: 'Finisher Priority',\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Rupture', value: AssassinationPriority.RuptureEnvenom },\n\t\t\t\t{ name: 'Envenom', value: AssassinationPriority.EnvenomRupture },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().mutilate\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, SubtletyPriority>({\n\t\t\tfieldName: 'subtletyFinisherPriority',\n\t\t\tlabel: \"Finisher Priority\",\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"Eviscerate\", value: SubtletyPriority.SubtletyEviscerate },\n\t\t\t\t{ name: \"Envenom\", value: SubtletyPriority.SubtletyEnvenom },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\n\t\t\tfieldName: 'multiTargetSliceFrequency',\n\t\t\tlabel: 'Multi-Target S&D',\n\t\t\tlabelTooltip: 'Frequency of Slice and Dice cast in multi-target scenarios.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\n\t\t\t\t{ name: 'Once', value: Frequency.Once },\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().multiTargetSliceFrequency != Frequency.FrequencyUnknown\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'minimumComboPointsMultiTargetSlice',\n\t\t\tlabel: 'Minimum CP (Slice)',\n\t\t\tlabelTooltip: 'Minimum number of combo points spent if Slice and Dice has frequency: Once',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().multiTargetSliceFrequency == Frequency.Once\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'hemoWithDagger',\n\t\t\tlabel: 'Hemorrhage with Dagger',\n\t\t\tlabelTooltip: 'Use Hemorrhage with Dagger in mainhand',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().hemorrhage\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'openWithGarrote',\n\t\t\tlabel: 'Open with Garrote',\n\t\t\tlabelTooltip: 'Open the encounter by casting Garrote.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'openWithShadowstep',\n\t\t\tlabel: 'Open with Shadowstep',\n\t\t\tlabelTooltip: 'Open the encounter by casting Shadowstep.',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().shadowstep\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'openWithPremeditation',\n\t\t\tlabel: 'Open with Premeditation',\n\t\t\tlabelTooltip: 'Open the encounter by casting Premeditation.',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().premeditation\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'useFeint',\n\t\t\tlabel: 'Use Feint',\n\t\t\tlabelTooltip: 'Cast Feint on cooldown. Mainly useful when using the associate glyph.'\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: \"useGhostlyStrike\",\n\t\t\tlabel: 'Use Ghostly Strike',\n\t\t\tlabelTooltip: 'Use Ghostly Strike on cooldown. Mainly useful when using the associate glyph.',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().ghostlyStrike\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\n\t\t\tfieldName: 'ruptureForBleed',\n\t\t\tlabel: 'Rupture for Bleed',\n\t\t\tlabelTooltip: 'Cast Rupture as needed to apply a bleed effect for Hunger for Blood',\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().hungerForBlood\n\t\t}),\n\t],\n};\n","import {\n\tDebuffs,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n\tWeaponType\n} from '../core/proto/common.js';\nimport {Player} from '../core/player.js';\nimport {Stats} from '../core/proto_utils/stats.js';\nimport {IndividualSimUI} from '../core/individual_sim_ui.js';\n\nimport {\n\tRogue_Options_PoisonImbue,\n\tRogue_Rotation_AssassinationPriority as AssassinationPriority,\n\tRogue_Rotation_CombatBuilder as CombatBuilder,\n\tRogue_Rotation_CombatPriority as CombatPriority,\n\tRogue_Rotation_Frequency as Frequency,\n\tRogue_Rotation_SubtletyPriority as SubtletyPriority,\n\tRogueMajorGlyph,\n} from '../core/proto/rogue.js';\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as RogueInputs from './inputs.js';\nimport * as Presets from './presets.js';\nimport {DefaultOptions} from './presets.js';\n\nexport class RogueSimUI extends IndividualSimUI<Spec.SpecRogue> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRogue>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'rogue-sim-ui',\n\t\t\tcssScheme: 'rogue',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t'Rotations are not fully optimized, especially for non-standard setups.',\n\t\t\t],\n\t\t\twarnings: [\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.sim.encounter.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tlet hasNoArmor = false\n\t\t\t\t\t\t\tfor (const target of simUI.sim.encounter.getTargets()) {\n\t\t\t\t\t\t\t\tif (target.getStats().getStat(Stat.StatArmor) <= 0) {\n\t\t\t\t\t\t\t\t\thasNoArmor = true\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (hasNoArmor) {\n\t\t\t\t\t\t\t\treturn 'One or more targets have no armor. Check advanced encounter settings.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsimUI.player.getTalents().mutilate &&\n\t\t\t\t\t\t\t\t(simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType != WeaponType.WeaponTypeDagger ||\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType != WeaponType.WeaponTypeDagger)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn '\"Mutilate\" talent selected, but daggers not equipped in both hands.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tif (simUI.player.getRotation().combatBuilder == CombatBuilder.Backstab &&\n\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType != WeaponType.WeaponTypeDagger) {\n\t\t\t\t\t\t\t\treturn 'Builder \"Backstab\" selected, but no dagger equipped.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tif (simUI.player.getInFrontOfTarget() && (simUI.player.getRotation().combatBuilder == CombatBuilder.Backstab ||\n\t\t\t\t\t\t\t\tsimUI.player.getRotation().openWithGarrote)) {\n\t\t\t\t\t\t\t\treturn 'Option \"In Front of Target\" selected, but using Backstab or Garrote as builder or opener.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tif (simUI.player.getRotation().useGhostlyStrike && !simUI.player.getMajorGlyphs().includes(RogueMajorGlyph.GlyphOfGhostlyStrike)) {\n\t\t\t\t\t\t\t\treturn '\"Use Ghostly Strike\" selected, but missing Glyph of Ghostly Strike.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tif (simUI.player.getRotation().useFeint && !simUI.player.getMajorGlyphs().includes(RogueMajorGlyph.GlyphOfFeint)) {\n\t\t\t\t\t\t\t\treturn '\"Use Feint\" selected, but missing Glyph of Feint.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\t\t\tgetContent: () => {\n\t\t\t\t\t\t\tconst mhWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\t\t\t\tconst ohWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\t\t\t\tconst mhImbue = simUI.player.getSpecOptions().mhImbue;\n\t\t\t\t\t\t\tconst ohImbue = simUI.player.getSpecOptions().ohImbue;\n\t\t\t\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined' || !simUI.player.getSpecOptions().applyPoisonsManually) {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mhWeaponSpeed < ohWeaponSpeed && ohImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\n\t\t\t\t\t\t\t\treturn 'Deadly poison applied to slower (off hand) weapon.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ohWeaponSpeed < mhWeaponSpeed && mhImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\n\t\t\t\t\t\t\t\treturn 'Deadly poison applied to slower (main hand) weapon.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatExpertise,\n\t\t\t],\n\t\t\tepPseudoStats: [\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP.\n\t\t\tepReferenceStat: Stat.StatAttackPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatAgility,\n\t\t\t\tStat.StatStrength,\n\t\t\t\tStat.StatAttackPower,\n\t\t\t\tStat.StatMeleeHit,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatMeleeCrit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatMeleeHaste,\n\t\t\t\tStat.StatArmorPenetration,\n\t\t\t\tStat.StatExpertise,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.PRERAID_PRESET_ASSASSINATION.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatAgility]: 1.86,\n\t\t\t\t\t[Stat.StatStrength]: 1.14,\n\t\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t\t[Stat.StatSpellCrit] : 0.28,\n\t\t\t\t\t[Stat.StatSpellHit] : 0.08,\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.39,\n\t\t\t\t\t[Stat.StatMeleeCrit]: 1.32,\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.48,\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.84,\n\t\t\t\t\t[Stat.StatExpertise]: 0.98,\n\t\t\t\t}, {\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 2.94,\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.45,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.AssassinationTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\ticyTalons: true,\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tabominationsMight: true,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\telementalOath: true,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t\tmangle: true,\n\t\t\t\t\tsunderArmor: true,\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t\tearthAndMoon: true,\n\t\t\t\t\tbloodFrenzy: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\tplayerInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tRogueInputs.ApplyPoisonsManually\n\t\t\t\t]\n\t\t\t},\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tRogueInputs.MainHandImbue,\n\t\t\t\tRogueInputs.OffHandImbue,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: RogueInputs.RogueRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.SpellCritBuff,\n\t\t\t\tIconInputs.SpellCritDebuff,\n\t\t\t\tIconInputs.SpellHitDebuff,\n\t\t\t\tIconInputs.SpellDamageDebuff\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tRogueInputs.StartingOverkillDuration,\n\t\t\t\t\tRogueInputs.HonorOfThievesCritRate,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.AssassinationTalents,\n\t\t\t\t\tPresets.CombatTalents,\n\t\t\t\t\tPresets.SubtletyTalents,\n\t\t\t\t\tPresets.HemoSubtletyTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRERAID_PRESET_ASSASSINATION,\n\t\t\t\t\tPresets.PRERAID_PRESET_COMBAT,\n\t\t\t\t\tPresets.P1_PRESET_ASSASSINATION,\n\t\t\t\t\tPresets.P1_PRESET_COMBAT,\n\t\t\t\t\tPresets.P1_PRESET_HEMO_SUB,\n\t\t\t\t\tPresets.P2_PRESET_ASSASSINATION,\n\t\t\t\t\tPresets.P2_PRESET_COMBAT,\n\t\t\t\t\tPresets.P2_PRESET_HEMO_SUB,\n\t\t\t\t],\n\t\t\t},\n\t\t})\n\t\tthis.player.changeEmitter.on((c) => {\n\t\t\tconst rotation = this.player.getRotation()\n\t\t\tconst options = this.player.getSpecOptions()\n\t\t\tconst encounter = this.sim.encounter\n\t\t\tif (this.player.getTalentTree() == 0) {\n\t\t\t\tif (rotation.assassinationFinisherPriority == AssassinationPriority.AssassinationPriorityUnknown) {\n\t\t\t\t\trotation.assassinationFinisherPriority = Presets.DefaultRotation.assassinationFinisherPriority;\n\t\t\t\t}\n\t\t\t\trotation.combatFinisherPriority = CombatPriority.CombatPriorityUnknown;\n\t\t\t\trotation.combatBuilder = CombatBuilder.SinisterStrike;\n\t\t\t\trotation.subtletyFinisherPriority = SubtletyPriority.SubtletyPriorityUnknown;\n\t\t\t\toptions.honorOfThievesCritRate = -1;\n\t\t\t} else if (this.player.getTalentTree() == 1) {\n\t\t\t\tif (rotation.combatFinisherPriority == CombatPriority.CombatPriorityUnknown) {\n\t\t\t\t\trotation.combatFinisherPriority = Presets.DefaultRotation.combatFinisherPriority;\n\t\t\t\t\trotation.combatBuilder = Presets.DefaultRotation.combatBuilder;\n\t\t\t\t}\n\t\t\t\trotation.assassinationFinisherPriority = AssassinationPriority.AssassinationPriorityUnknown;\n\t\t\t\trotation.subtletyFinisherPriority = SubtletyPriority.SubtletyPriorityUnknown;\n\t\t\t\toptions.honorOfThievesCritRate = -1;\n\t\t\t} else {\n\t\t\t\tif (rotation.subtletyFinisherPriority == SubtletyPriority.SubtletyPriorityUnknown) {\n\t\t\t\t\trotation.subtletyFinisherPriority = Presets.DefaultRotation.subtletyFinisherPriority;\n\t\t\t\t}\n\t\t\t\trotation.assassinationFinisherPriority = AssassinationPriority.AssassinationPriorityUnknown;\n\t\t\t\trotation.combatFinisherPriority = CombatPriority.CombatPriorityUnknown;\n\t\t\t\trotation.combatBuilder = CombatBuilder.SinisterStrike;\n\t\t\t\tif (options.honorOfThievesCritRate == -1) {\n\t\t\t\t\toptions.honorOfThievesCritRate = DefaultOptions.honorOfThievesCritRate\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setRotation(c, rotation)\n\t\t\tif (!options.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (encounter.getNumTargets() > 3) {\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) { \n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison \n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options)\n\t\t});\n\t\tthis.sim.encounter.changeEmitter.on((c) => {\n\t\t\tconst rotation = this.player.getRotation()\n\t\t\tconst options = this.player.getSpecOptions()\n\t\t\tconst encounter = this.sim.encounter\n\t\t\tif (this.sim.encounter.getNumTargets() > 3) {\n\t\t\t\tif (rotation.multiTargetSliceFrequency == Frequency.FrequencyUnknown) {\n\t\t\t\t\trotation.multiTargetSliceFrequency = Presets.DefaultRotation.multiTargetSliceFrequency;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trotation.multiTargetSliceFrequency = Frequency.FrequencyUnknown;\n\t\t\t}\n\t\t\tthis.player.setRotation(c, rotation)\n\t\t\tif (!options.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (encounter.getNumTargets() > 3) {\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) { \n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison \n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options)\n\t\t});\n\t}\n}\n"],"names":["CombatTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","RogueMajorGlyph","GlyphOfKillingSpree","major2","GlyphOfTricksOfTheTrade","major3","GlyphOfRupture","AssassinationTalents","GlyphOfMutilate","GlyphOfHungerForBlood","SubtletyTalents","GlyphOfBackstab","GlyphOfEviscerate","GlyphOfShadowDance","HemoSubtletyTalents","GlyphOfSliceAndDice","DefaultRotation","RogueRotation","exposeArmorFrequency","Rogue_Rotation_Frequency","Maintain","minimumComboPointsExposeArmor","tricksOfTheTradeFrequency","assassinationFinisherPriority","Rogue_Rotation_AssassinationPriority","EnvenomRupture","combatBuilder","Rogue_Rotation_CombatBuilder","SinisterStrike","combatFinisherPriority","Rogue_Rotation_CombatPriority","RuptureEviscerate","subtletyFinisherPriority","Rogue_Rotation_SubtletyPriority","SubtletyEviscerate","minimumComboPointsPrimaryFinisher","minimumComboPointsSecondaryFinisher","hemoWithDagger","DefaultOptions","RogueOptions","mhImbue","Poison","DeadlyPoison","ohImbue","InstantPoison","applyPoisonsManually","startingOverkillDuration","honorOfThievesCritRate","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","prepopPotion","defaultConjured","Conjured","ConjuredRogueThistleTea","flask","Flask","FlaskOfEndlessRage","food","Food","FoodMegaMammothMeal","P2_PRESET_ASSASSINATION","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","player","getTalentTree","gear","EquipmentSpec","fromJsonString","P2_PRESET_COMBAT","PRERAID_PRESET_ASSASSINATION","PRERAID_PRESET_COMBAT","P1_PRESET_ASSASSINATION","P1_PRESET_HEMO_SUB","P1_PRESET_COMBAT","P2_PRESET_HEMO_SUB","MainHandImbue","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","numColumns","values","value","NoPoison","actionId","ActionId","fromItemId","WoundPoison","OffHandImbue","StartingOverkillDuration","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","HonorOfThievesCritRate","showWhen","getTalents","honorAmongThieves","ApplyPoisonsManually","InputHelpers.makeSpecOptionsBooleanInput","RogueRotationConfig","inputs","InputHelpers.makeRotationEnumInput","Frequency","Never","Once","InputHelpers.makeRotationNumberInput","getRotation","CombatBuilder","Backstab","combatPotency","CombatPriority","EviscerateRupture","AssassinationPriority","RuptureEnvenom","mutilate","SubtletyPriority","SubtletyEnvenom","multiTargetSliceFrequency","FrequencyUnknown","InputHelpers.makeRotationBooleanInput","hemorrhage","shadowstep","premeditation","ghostlyStrike","hungerForBlood","RogueSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","sim","encounter","changeEmitter","getContent","hasNoArmor","target","getTargets","getStats","getStat","Stat","StatArmor","getGear","getEquippedItem","ItemSlot","ItemSlotMainHand","item","weaponType","WeaponType","WeaponTypeDagger","ItemSlotOffHand","getInFrontOfTarget","openWithGarrote","useGhostlyStrike","getMajorGlyphs","includes","GlyphOfGhostlyStrike","useFeint","GlyphOfFeint","mhWeaponSpeed","weaponSpeed","ohWeaponSpeed","getSpecOptions","Rogue_Options_PoisonImbue","epStats","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatSpellHit","StatSpellCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.PRERAID_PRESET_ASSASSINATION","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","talents","Presets.AssassinationTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","strengthOfEarthTotem","icyTalons","leaderOfThePack","abominationsMight","swiftRetribution","elementalOath","sanctifiedRetribution","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","heartOfTheCrusader","mangle","sunderArmor","faerieFire","shadowMastery","earthAndMoon","bloodFrenzy","playerInputs","RogueInputs.ApplyPoisonsManually","playerIconInputs","RogueInputs.MainHandImbue","RogueInputs.OffHandImbue","rotationInputs","RogueInputs.RogueRotationConfig","includeBuffDebuffInputs","IconInputs.SpellCritBuff","IconInputs.SpellCritDebuff","IconInputs.SpellHitDebuff","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","RogueInputs.StartingOverkillDuration","RogueInputs.HonorOfThievesCritRate","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.CombatTalents","Presets.SubtletyTalents","Presets.HemoSubtletyTalents","Presets.PRERAID_PRESET_COMBAT","Presets.P1_PRESET_ASSASSINATION","Presets.P1_PRESET_COMBAT","Presets.P1_PRESET_HEMO_SUB","Presets.P2_PRESET_ASSASSINATION","Presets.P2_PRESET_COMBAT","Presets.P2_PRESET_HEMO_SUB","this","on","c","options","AssassinationPriorityUnknown","CombatPriorityUnknown","SubtletyPriorityUnknown","setRotation","getNumTargets","setSpecOptions"],"mappings":"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"}